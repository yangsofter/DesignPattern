工厂方法模式

意图
隐藏对象创建的复杂性。客户通常不指定要创建的具体类，而是面向接口或抽象类进行编码，让Factory类负责创建具体的类型。
Factory类有一个返回抽象类或接口的静态方法。客户通常（并非总是）提供某种信息，然后Factory类使用提供的信息来确认创建并返回哪个子类。

优点
允许客户代码完全无需考虑依赖类是如何创建的，遵循了依赖倒置原则（Dependency Inversion principle，DIP）。另外将负责对象创建的代码集中起来，如需要修改对象的生成方式，可以轻松定位并更新，而不会影响到依赖它的代码

示例
在这个虚构的电子商务引用程序示例中，采用Factory Method模式来选择正确的货运公司，在这场景中，OrderService类只有一个名为Dispatch的方法，该方法负责协调货运公司对象的创建，该对象又被用来创建包裹的托运标识符.
Factory类在该实例中只负责根据某种业务规则创建有效的货运公司。将业务逻辑抽象出来放入到Factory类中，为OrderService减轻了负担，使其关注于单一的责任。
