装饰器模式

意图
通过组合动态地向对象中添加新的行为。该模式的实现方式是：要么从同一个基类继承，要么实现一个共享的接口并注入待装饰类的实例。Decorator模式就是用一个带有扩展行为或状态的类来包装现有类的过程。可以将多个装饰添加到一个类中以组合扩展行为。

优势
当希望向现有类添加额外的功能而又不希望被绑定到具体的实现时，Decorator模式及其游泳。除了添加新功能，装饰还可以显示功能，例如安全装饰可以确保只有具有特定权限的用户才能够调用方法或例程。装饰还可以用来包装基础设施代码，例如在方法调用前后记录日志而不会污染领域模型。

示例
使用Decorator模式将折扣和现金乘数应用到商品列表中。ProductService类负责协调商品列表的检索，然后用折扣和现金乘数来装饰这些商品。